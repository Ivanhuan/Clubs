@model ClubApp.Models.AddUserNumModel

@{
    ViewBag.Title = "添加社团账号";
}

<fieldset class="layui-elem-field">
    <legend>新增社团账号</legend>
    <div class="layui-field-box">
        本功能将扩充系统账号池（用户创建社团时将从账号池中抽取未分配的账号作为用户创建社团申请所得社团账号，
        当系统账号池中未分配的账号为空时将不能创建新社团）<br />
        本功能使用方法：系统账号仅允许为纯数字，系统将根据指定的起始数字开始以1为递增的顺序创建指定个账号<br />
        例如：起始序号设为1000，最大序号设为1010，系统则会创建（1000，1001，1002，1003....1009,1010）11个账号<br />
        起始序号不得小于当前账号池中序号最大的账号
    </div>
</fieldset>

@using (Html.BeginForm("AddClubNumber", "Admin", FormMethod.Post, new { @class = "layui-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="layui-form-item">
        @Html.LabelFor(m => m.NowNum, new { @class = "layui-form-label" })
        <div class="layui-input-block">
            @Html.TextBoxFor(m => m.NowNum, new { @class = "layui-input", @disabled = "disabled" })
            @Html.ValidationMessageFor(m => m.NowNum, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="layui-form-item">
        @Html.LabelFor(m => m.MinNum, new { @class = "layui-form-label" })
        <div class="layui-input-block">
            @Html.TextBoxFor(m => m.MinNum, new { @class = "layui-input" })
            @Html.ValidationMessageFor(m => m.MinNum, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="layui-form-item">
        @Html.LabelFor(m => m.MaxNum, new { @class = "layui-form-label" })
        <div class="layui-input-block">
            @Html.TextBoxFor(m => m.MaxNum, new { @class = "layui-input" })
            @Html.ValidationMessageFor(m => m.MaxNum, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="layui-form-item">
        <div class="layui-input-block">
            <input type="submit" value="添加" class="layui-btn" />
        </div>
    </div>
}